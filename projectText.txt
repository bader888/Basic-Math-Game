//////////////////////// (( REQUIRMENT )) //////////////////////////////////////////
1-how many question do you want to answer ? 
---- no range in this question

2-enter question level:  [1]:easy , [2]:mid , [3]:hard , [4]:mix ? 
---- if easy: number optype number , mid: number optype 2numbers , hard: 2numers optype 2numers, mix: all typse togather

3-enter operation type: [1]:add , [2]:sub , [3]:mult , [4]:div , [5]:mix ?
--add = +, sub = -, mult = * , div = / ,
--when we use the / optype we will ignore the remainder ;

4-when the game start will show this: 
--question [1/5] //number 5 mean user choice to answer 5 question
6
16  +
_______
5       
//here the user will put his answer 
--if user answer correct ,  this mesage will show : 
right answer :)

--if user answer wronge this mesage will show : 
wronge answer :(
the correct answer is : here put the correct answer


5-when the question end this screen will show : 
______________________________________________

final result is pass :)
______________________________________________
number of question : 5 
question level : hard
operation type: mix 
number of wronge answer : 3
number of right answer : 2
______________________________________________
----if the wronge answer > right answer print this message : 
final result is fail :(
---- else print :final result is pass :) 

6-do you want play again ? y\n ?
--if choice is no ===> end program
--else:
:A-clear the screen
:B-repeat the game from begeen

/////////////////////////////(( VIRABLE ))///////////////////////////////////////////
changable data: 
1-QuestionsNumber
2-QuestionLevel
4-QNumber

5-Number1
6-Number2
3-QuestionOpType
7-CorrectAnswer
8-UserAnswer

constant data:
operationType = sub, add, div, mult, mix 
finalResult = fail, pass
QuestionLevel = easy , mid , hard, mix 

//two counters
1-number of wronge answer
2-number of right answer

/////////////////////////////////////////////////////// (( FUNCTION )) ///////////////////////////////////////////////////////
<<: recev 
>>: return

1-RandomNumber
>> random number 

2-FillQuizOption 
>> stQuizOption
2-1-ReadHowManyQuestion >> number
2-2-ReadQuestionLevel >> enQlevel
2-3-ReadOperationType >>enOperationType


5-FillQuizData
<< stQuizOption
>> strQuizData

5-1: DifficultyLevel 
<< stQuizOption
>> strQuizData

5-1-1: GenerateNumber1 >> number
5-1-2: GenerateNumber2 >> number
5-1-3: OpType >> enOperationType
5-1-4: MixOpType

6-ShowQuizzQues
<<  strQuizData
--void
6-5: CheckOperationType << enOperationType >> char
6-1: ReadUserAsnwer >> number 
6-2: CorrectAnswer << number1 , number2 , OpType >> number
6-3: CheckUserAnswer <<  ReadUserAsnwer , CorrectAnswer >> bool
6-4: ShowQuizzResult << CheckUserAnswer >> string

7-ShowFinalResult << stQuizOption, NumberOFcorectAnswer, NumberOFwrongAnswer
7-1: checkFinalResult << NumberOFcorectAnswer,NumberOFwrongAnswer >> bool

8-RestScreen

9-setAnswerScreenColor
<< enFinalResult

10-StartGame

11-playGame
///////////////////////////////// (( PROBLEM )) /////////////////////////////////
1-HOW TO MAKE MIX NUMBERS  IN DIFFUCALT FUNCTION << stQuizOption >> number
2-HOW TO SHOW OPRTATION TYPE AND QUESTION LEVEL IN LAST FUNCTION 
/////////////////////////////////  ( ( DONE ) )  /////////////////////////////////
'cmd' is not recognized as an internal or external command,
operable program or batch file.